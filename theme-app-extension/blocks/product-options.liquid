<style>
  .button {
    display: inline-block;
    border-radius: 4px;
    background-color: #708ae8;
    border: none;
    color: #FFFFFF;
    text-align: center;
    font-size: 28px;
    padding: 0px;
    width: 250px;
    transition: all 0.5s;
    cursor: pointer;
    margin: 5px;
  }
  
  .button span {
    cursor: pointer;
    display: inline-block;
    position: relative;
    transition: 0.5s;
  }
  
  .button span:after {
    content: '\1F6D2';
    position: absolute;
    opacity: 0;
    top: 0;
    right: -40px;
    transition: 0.5s;
  }
  
  .button:hover span {
    padding-right: 55px;
  }
  
  .button:hover span:after {
    opacity: 1;
    right: 0px;
  }

  .priceDiv {
    font-size: 50px;
    font-weight: bold;
  }

  #quantitySelector {
    padding-bottom: 25px;
  }
</style>

<div class="options-block">
  <div id="options-block-price" class="priceDiv"></div>
 
  <script>
    var optionsBlockProductData = {}; // state data for this options block
    var price = {{ product.price }} / 100; // price data
    var priceDictionary = {};
    optionsWrapper();
    printPrice();

    function updatePrice(checkboxElement) {
      console.log(priceDictionary);
      console.log(checkboxElement.id);
      let priceChange = 0

      if (checkboxElement.id.includes("dropdown")) {  // DROPDOWN
        let dropdownId = checkboxElement.id.replace('checkbox', '');
        let userChoice = document.getElementById(dropdownId);
        let optionID = userChoice.value;  // ID user selects
        let id = userChoice.options[userChoice.selectedIndex].value;  // name of selected option
        priceChange = priceDictionary[`dropdowncheckbox${id}`];
      } else {  // ENGRAVING
        priceChange = priceDictionary[checkboxElement.id];
      }
      

      if (checkboxElement.checked) {
        price += priceChange;
      } else {
        price -= priceChange;
      }

      printPrice();
    }

    function printPrice() {
      let pageContent = document.getElementById("options-block-price");
      pageContent.textContent = `$ ${price.toFixed(2)}`;
    }

    
    async function fetchOptions(productID) {
      let response = await fetch(`https://pricing-options-app.herokuapp.com/api/show-options/${productID}`);      
      if (response.status != 200) return {};

      let data = await response.json();
      return data;
    }


    async function optionsWrapper() {
      let productData = await fetchOptions({{ product.id }});
      optionsBlockProductData = productData;
      renderPage();
    }


    async function renderPage() {
        const pageContent = document.getElementsByClassName("options-block")[0];
        // log our state data for debugging
        console.log(optionsBlockProductData);
        let optionsArray = optionsBlockProductData.productOptions || [];
        let HTMLString = "";

        for (let i = 0; i < optionsArray.length; i++) {
          let optionItem = optionsArray[i];
          let optionType = optionItem.optionType;

          HTMLString += `<div class="${optionType}">`;

          if (optionType == "dropdown") {  // DROPDOWN
            HTMLString += `<br><input type="checkbox" id="dropdowncheckbox${optionItem.menuTitle}" name="dropdowncheckbox${optionItem.menuTitle}" onclick="updatePrice(dropdowncheckbox${optionItem.menuTitle})">`;
            HTMLString += `<label for="downdowncheckbox${optionItem.menuTitle}">Check to include option in cart</label><br>`;
            HTMLString += `<label for="${optionItem.menuTitle}">${optionItem.menuTitle}</label>`;
            HTMLString += ` <select name="${optionItem.menuTitle}" id="dropdown${optionItem.menuTitle}" onchange="updatePrice(dropdowncheckbox${optionItem.menuTitle})">`;
            for (let j = 0; j < optionItem.options.length; j++) {  // loop through the choices for the dropdown
              let choice = optionItem.options[j];
              priceDictionary[`dropdowncheckbox${choice.variantOptionId}`] = parseFloat(choice.price);  
              HTMLString += `<option value="${choice.variantOptionId}">${choice.option}</option>`;
            }
            HTMLString += `</select>`;

          } else {  // ENGRAVING
            let id = optionItem.optionVariantId;
            priceDictionary[`engravingcheckbox${id}`] = parseFloat(optionItem.price);
            
            HTMLString += `<br><input type="checkbox" id="engravingcheckbox${id}" name="engravingcheckbox${id}" onclick="updatePrice(engravingcheckbox${id})">`;
            HTMLString += `<label for="engravingcheckbox${id}">Check to include engraving in cart</label>`;
            
            HTMLString += `<form><label for="${id}">Engraving</label>`;
            HTMLString += ` <input type="text" id="${id}" name="${id}" value="${optionItem.description}"><br>`;
            HTMLString += `</form>`;
          }
          HTMLString += `</div>`;  
        }
        HTMLString += `<br><div id="quantitySelector">Enter Quantity<label for="quantitySelectorBox">`;
        HTMLString += ` <input type="number" id="quantitySelectorBox" name="quantitySelectorBox" value="1"><br>`;
        HTMLString += `</label></div>`;
        HTMLString += `<button type="button" class="button" style="vertical-align:middle" onclick="updateCart()"><span>ADD TO CART </span></button>`;

        pageContent.insertAdjacentHTML('beforeend', HTMLString);
    } 
    
    
    async function updateCart() {
        let optionsArray = optionsBlockProductData.productOptions || [];
        let purchaseQuantity = document.getElementById("quantitySelectorBox").value
        let formData = {
          'items': [{
              'quantity': purchaseQuantity,
              'id': {{ product.variants[0].id }},
              'Description': "Red Rope with Engraving" // TODO: write user friendly list of options attached to this product
            }]
        };

        for (let i = 0; i < optionsArray.length; i++) {
          let optionItem = optionsArray[i];

          if (optionItem.optionType == "dropdown") {  // DROPDOWN
            if (document.getElementById(`dropdowncheckbox${optionItem.menuTitle}`).checked) {        
              let userChoice = document.getElementById(`dropdown${optionItem.menuTitle}`);  // dropdown option selected by the user
              let optionID = userChoice.value;  // ID user selects
              let optionName = userChoice.options[userChoice.selectedIndex].text;  // name of selected option

              let optionObject = {
                'quantity': purchaseQuantity, // get QTY from quantity selector
                'id': parseInt(optionID),
                'description': "make sure to note which item this option is for" // get main product ID or name
              };
              formData.items.push(optionObject);
            }
          } else {  // ENGRAVING
            if (document.getElementById(`engravingcheckbox${optionItem.optionVariantId}`).checked) {
              
              let optionObject = {
              'quantity': purchaseQuantity, // get QTY from quantity selector
              'id': parseInt(optionItem.optionVariantId),
              'Engraving Text': document.getElementById(`${optionItem.optionVariantId}`).value // get main product ID or name
              };
              formData.items.push(optionObject);
            }
          }  
        }

        // Form Data For Debugging
        console.log(formData);

        await fetch(window.Shopify.routes.root + 'cart/add.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        })
        .then(response => {
          return response.json();
        })
        .catch((error) => {
          console.error('Error:', error);
        });
    }
  </script>
</div>


{% schema %}
  {
    "name": "Product Options",
    "target": "section"
  }
{% endschema %}
